<?php  namespace Modules\CupChart\Foorm\Importazione;


use App\Models\GraficoTabella;
use Gecche\Cupparis\App\Foorm\Base\FoormInsert as BaseFoormInsert;
use GuzzleHttp\Client;
use Illuminate\Support\Arr;
use Illuminate\Support\Facades\Artisan;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\File;
use Illuminate\Support\Facades\Storage;

class FoormInsert extends BaseFoormInsert
{

    protected $fileId;

    public $validationSettings = [
        'rules' => [
            'file' => 'required',
        ]
//        'username' => 'required|between:4,255|unique:users,username',
    ];


    public function filterPredefinedValuesFromInput($value)
    {

        if (is_array($value)) {

            if (Arr::get($value, 'file') == '{}') {
                $value['file'] = null;
            }

        }

        return parent::filterPredefinedValuesFromInput($value);
    }

    protected function setFieldsToModel($model, $configFields, $input)
    {
//        unset($input['mainrole']);
//        unset($input['password_confirmation']);


        $model->setFieldsFromResource($input,'file');
        unset($input['file']);

        parent::setFieldsToModel($model, $configFields, $input);

    }

    protected function saveModel($input)
    {
        DB::beginTransaction();
        try {
            parent::saveModel($input);
            $this->model->filesOps($input,'file');
            DB::commit();

        } catch (\Exception $e) {
            DB::rollback();
        }

    }

    public function save($input = null, $validate = true)
    {
        $saved = parent::save($input, $validate); // TODO: Change the autogenerated stub
        // TODO meglio far partire un processo in coda
        Artisan::call('manage-importazione',[
            'id' => $this->model->getKey(),
            '--strict' => 1
        ]);
        Artisan::call('crea-importazione-json',['id' => $this->model->getKey()]);
        GraficoTabella::creaGrafico($this->model->menu_id,$this->model->getKey());
        return $saved;
    }


}
